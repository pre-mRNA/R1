import argparse
from pathlib import Path
import logging
import sys 

sys.path.append("/home/150/as7425/R1/parse_modifications_data/")
from map_mm_tag_to_genome_position import extract_modifications

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def run_mod_extraction(bam_file, output_file):
    with open(output_file, 'w') as out:
        for modification in extract_modifications(bam_file):
            if modification:
                out.write(modification + '\n')
    logging.info(f"Modifications extracted and saved to {output_file}")

def main():
    parser = argparse.ArgumentParser(description="Extract read IDs and modification positions from BAM file. Currently works for m6A calls generated by Dorado 0.6")
    parser.add_argument("-b", "--bam_file", required=True, help="Path to the input BAM file")
    parser.add_argument("-o", "--output_file", required=True, help="Path to the output file for modifications")
    args = parser.parse_args()

    bam_file_path = Path(args.bam_file)
    output_file_path = Path(args.output_file)

    if not bam_file_path.is_file():
        logging.error(f"BAM file not found: {bam_file_path}")
        return

    run_mod_extraction(bam_file_path, output_file_path)

if __name__ == "__main__":
    main()
